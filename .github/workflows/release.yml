---
name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Custom release title (optional)'
        required: false
        type: string
      draft:
        description: 'Create as draft release'
        required: false
        type: boolean
        default: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: YAML Lint
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_config_filepath: config.yamllint.yaml
          yamllint_strict: false
          yamllint_comment: true

      - name: Run chart-testing (lint)
        uses: helm/chart-testing-action@v2.6.1

      - name: Lint Helm chart
        run: ct lint --config .github/ct.yaml

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: Install Helm unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run Deployment Patch Tests
        run: helm unittest --color -f tests/unit/deployment-patch_test.yaml .

      - name: Run Migration Job Patch Tests
        run: helm unittest --color -f tests/unit/migration-job-patch_test.yaml .

  security-scan:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: write  # Required for uploading SARIF results
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for pushing commits to the repository and GitHub Pages
      pull-requests: write
      issues: write
    needs:
      - lint
      - unit-test
      - security-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # Ensure we have a fresh checkout for the remaining steps
      - name: Checkout for release
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: cr-checkout

      - name: Helm dependency update
        run: |
          cd cr-checkout
          helm dependency update .

      - name: Extract chart information
        id: chart_info
        uses: mikefarah/yq@master
        with:
          cmd: |
            echo "name=$(yq '.name' cr-checkout/Chart.yaml)" >> $GITHUB_OUTPUT
            echo "version=$(yq '.version' cr-checkout/Chart.yaml)" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          disable-autolabeler: false
          commitish: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Helm Chart
        id: package
        run: |
          cd cr-checkout
          helm package .
          PACKAGE_PATH=$(ls *.tgz)
          echo "package_path=$PACKAGE_PATH" >> $GITHUB_OUTPUT
          # Move the package back up to the workspace root for the GitHub release
          mv $PACKAGE_PATH ..

      # Create proper Helm repository structure for GitHub Pages
      - name: Create Helm repo structure
        run: |
          mkdir -p gh-pages-output
          cp cr-checkout/*.tgz gh-pages-output/
          cd gh-pages-output
          touch index.yaml
          touch .nojekyll  # Prevents GitHub Pages from using Jekyll processing
          helm repo index . --url https://raulstechtips.github.io/infisical-standalone-db-secure-wrapper

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages-output
          keep_files: false  # Replace all gh-pages content with our new structure
          force_orphan: true  # Create a clean gh-pages branch

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.chart_info.outputs.version }}
          name: ${{ github.event.inputs.release_title || format('{0} v{1}', steps.chart_info.outputs.name, steps.chart_info.outputs.version) }}
          body: ${{ steps.release_notes.outputs.body }}
          files: ${{ steps.package.outputs.package_path }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
