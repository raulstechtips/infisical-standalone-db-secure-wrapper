---
name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Custom release title (optional)'
        required: false
        type: string

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: YAML Lint
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_config_filepath: config.yamllint.yaml
          yamllint_strict: false
          yamllint_comment: true

      - name: Run chart-testing (lint)
        uses: helm/chart-testing-action@v2.6.1

      - name: Lint Helm chart
        run: ct lint --config .github/ct.yaml

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: Install Helm unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run Deployment Patch Tests
        run: helm unittest --color -f tests/unit/deployment-patch_test.yaml .

      - name: Run Migration Job Patch Tests
        run: helm unittest --color -f tests/unit/migration-job-patch_test.yaml .

  security-scan:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: write  # Required for uploading SARIF results
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Helm dependency update
        run: helm dependency update .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for pushing commits to the repository and GitHub Pages
      pull-requests: write
      issues: write
    needs:
      - lint
      - unit-test
      - security-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Add dependency repositories
        run: |
          helm repo add infisical-standalone https://dl.cloudsmith.io/public/infisical/helm-charts/helm/charts/
          helm dependency update .

      - name: Extract chart information
        id: chart_info
        uses: mikefarah/yq@master
        with:
          cmd: |
            echo "name=$(yq '.name' Chart.yaml)" >> $GITHUB_OUTPUT
            echo "version=$(yq '.version' Chart.yaml)" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          disable-autolabeler: false
          commitish: main
          publish: false
          name: ""
          tag: ""
          version: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          # Install GitHub CLI if not already installed
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

          # Authenticate GitHub CLI
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # Direct approach using only Helm commands (no chart-releaser)
      - name: Package and Deploy Helm Chart to GitHub Releases
        run: |
          # Package the chart
          echo "Packaging Helm chart..."
          helm package .

          # Get the packaged chart file
          CHART_PACKAGE=$(ls *.tgz)
          echo "Created chart package: $CHART_PACKAGE"

          # Create GitHub release and upload chart
          RELEASE_TAG="${{ steps.chart_info.outputs.name }}-${{ steps.chart_info.outputs.version }}"
          RELEASE_NAME="${{ github.event.inputs.release_title || format('{0} v{1}', steps.chart_info.outputs.name, steps.chart_info.outputs.version) }}"

          # Create release notes file
          echo "${{ env.RELEASE_NOTES }}" > release-notes.md

          # Create release with chart as asset
          gh release create "$RELEASE_TAG" \
            --title "$RELEASE_NAME" \
            --notes-file release-notes.md \
            "$CHART_PACKAGE"

      # Prepare Helm chart index for GitHub Pages
      - name: Prepare Helm chart index
        run: |
          # Create or update the Helm repo index
          if [ -f "index.yaml" ]; then
            helm repo index --url "https://raulstechtips.github.io/infisical-standalone-db-secure-wrapper" --merge index.yaml .
          else
            helm repo index --url "https://raulstechtips.github.io/infisical-standalone-db-secure-wrapper" .
          fi

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .
          clean: false
          token: ${{ secrets.GITHUB_TOKEN }}
          single-commit: false
